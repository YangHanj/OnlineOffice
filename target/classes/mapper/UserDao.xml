<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="iee.yh.onlineoffice.db.dao.UserDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="iee.yh.onlineoffice.db.entity.UserEntity" id="userMap">
        <result property="id" column="id"/>
        <result property="openId" column="open_id"/>
        <result property="nickname" column="nickname"/>
        <result property="photo" column="photo"/>
        <result property="name" column="name"/>
        <result property="sex" column="sex"/>
        <result property="tel" column="tel"/>
        <result property="email" column="email"/>
        <result property="hiredate" column="hiredate"/>
        <result property="role" column="role"/>
        <result property="root" column="root"/>
        <result property="deptId" column="dept_id"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <!--  查询是否存在管理员  -->
    <select id="haveRootUser" resultType="boolean">
        SELECT
            IF(COUNT(*),TRUE,FALSE)
        FROM
            tb_user
        WHERE root = 1
    </select>

    <!--  查询用户id  -->
    <select id="searchIdByOpenId" parameterType="String" resultType="Integer">
        SELECT
            id
        FROM
            tb_user
        WHERE
            open_id=#{openId} AND status = 1
    </select>

    <!-- 查询用户的权限列表 -->
    <select id="searchUserPermissions" parameterType="int" resultType="String">
        SELECT p.permission_name
        FROM tb_user u
        JOIN tb_role r ON JSON_CONTAINS(u.role,CAST(r.id AS CHAR))
        JOIN tb_permission p ON JSON_CONTAINS(r.permissions,CAST(p.id AS CHAR))
        WHERE u.id = #{userId} AND u.status = 1
    </select>

    <select id="searchNameAndDept" parameterType="int" resultType="HashMap">
        SELECT u.name,d.dept_name
        FROM tb_user u LEFT JOIN tb_dept d ON u.dept_id=d.id
        WHERE u.id = #{userId} AND status = 1
    </select>
    
    <select id="searchUserGroupByDept" parameterType="String" resultType="HashMap">
        SELECT
            d.id AS deptId,d.dept_name AS deptName,
            u.id AS userId,u.name
        FROM tb_dept d JOIN tb_user u ON u.dept_id = d.id
        WHERE u.status = 1
        <if test="keyword != null">
            AND u.name LIKE '%${keyword}'
        </if>
        ORDER BY d.id,u.id
    </select>

    <select id="searchUserInfo" parameterType="int" resultType="HashMap">
        SELECT
            u.open_id AS openId,
            u.nickname,
            u.name,
            u.photo,
            u.sex,
            u.tel,
            u.email,
            d.dept_name AS dept,
            u.hiredate,
            CASE u.status
                WHEN 1 THEN "在职"
                WHEN 2 THEN "离职"
            END AS status,
            (SELECT GROUP_CONCAT(role_name separator ",") FROM tb_role
            WHERE JSON_CONTAINS(u.role,CONVERT(id,CHAR))) AS roles
            FROM tb_user u
            LEFT JOIN tb_dept d ON u.dept_id = d.id
            WHERE u.id = #{userId} AND u.status = 1
    </select>

    <select id="searchDeptManagerId" parameterType="int" resultType="int">
        SELECT
            u2.id
        FROM tb_user u1 JOIN tb_user u2 ON u1.dept_id = u2.dept_id
        JOIN tb_role r ON JSON_CONTAINS(u2.role,CAST(r.id AS CHAR))
        WHERE u1.id=#{id} AND r.id = 2 AND u1.status = 1 AND u2.status = 1
    </select>

    <select id="searchGmId" resultType="int">
        SELECT
            u.id
        FROM tb_user u
        JOIN tb_role r ON JSON_CONTAINS(u.role,CAST(r.id AS CHAR))
        WHERE r.id = 1 AND u.status = 1
    </select>
    
    <select id="searchDeptNameByUserId" parameterType="int" resultType="HashMap">
        SELECT
            u.dept_id,d.dept_name
        FROM tb_user u
                 LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.id = #{userId}
    </select>
</mapper>